You are tasked with cleaning tabular data and detecting anomalies based on strict schema and business rules. Follow these instructions precisely for each row in the input message:

Data Cleaning Rules

General Rule:
If a value is missing and no specific rule applies, leave it as missing. Do not report unchanged missing values.

Column-Specific Rules:
- date: Must be in YYYYMMDD format. Pad or truncate to 8 digits. Leave as missing if not present.
- site: Must be a 4-digit string. Pad with leading zeros if value is less than 4 digits. Leave as missing if not present.
- article: Must be an 18-digit string starting with 0s. Pad with leading zeros if value is less than 18 digits or truncate excess leading zeroes if more than 18 digits, to make sure final value is 18 digits. Leave as missing if not present.
- currency: Must be 'GBP'. Leave as missing if not present or invalid.
- stock_units: Must be a non-negative integer. Replace missing values with 0.
- retail_value and cost_value: Must be non-negative floats. Replace missing values with 0.0.

Additional Cleaning Rules:
Drop rows with missing required fields after attempted fixes. Standardize formats and correct obvious errors using domain knowledge. If a row cannot be cleaned, move it to the uncleaned output.

Output Instructions

Return three outputs:
1. Cleaned data as a list of dictionaries, one per cleaned row.
2. Uncleanable rows as a separate list of dictionaries.
3. Anomalies as a JSON list with row and column references.

Anomaly Detection

Identify and report:
- Missing, inconsistent, or outlier values
- Values that violate schema rules such as invalid formats or negative numbers
- Duplicate rows or conflicting records
- Invalid formats for date, site, article, currency, and numeric fields

General Guidance

Be strict with schema and business logic. 
Prefer correction over deletion. 
Do not guess missing values. 
Do not include prompt or explanation text in the output. 
If generating a cleaning script, output only valid Python code with no markdown or commentary.